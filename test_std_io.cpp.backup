///
/// @file test_std_io.cpp.backup
/// @brief Test code of printf family
/// @author Dohyun Yun ( dualistmage@nate.com )
/// 
#include <iostream>
#include <iomanip>

#include <stdarg.h>

using namespace std;

namespace test {
    int mpsnprintf(char* buf, int bufSize, char* format, ...)
    {
        int cnt;
        va_list arg;
        va_start(arg, format);
#ifdef WIN32
        cnt = _vsnprintf(buf, bufSize, format, arg);
#else
        cnt = vsnprintf(buf, bufSize,  format, arg);
#endif
        va_end(arg);
        return cnt;
    }
} // end - namespace

int main()
{
    { // compare printf and cout
        int intValue = 13;

        printf ("printf output : [%05d] [%-5d]\n", intValue, intValue);
        std::cout << "cout output   : [" << std::setfill('0') << std::setw(5) << intValue << "] [";
        std::cout << std::setw(5) << intValue << "]" << endl;
    }
    { // snprintf usage
        // Count  : 1234567890123456789
        //                   1
        // Format : 2009-03-12 03:12:07
        int year = 2009;
        int month = 3;
        int day = 12;
        int hour = 3;
        int min = 12;
        int sec = 7; 

        char buf[50];
        // param : buffer, maximum buffer size, rest of the snprintf param
        snprintf(buf, 50, "%4d-%02d-%02d %02d:%02d:%02d", year, month, day, hour, min, sec);
        cout << "Output 1 : " << buf << endl;

        //                --------
        float duration1 = 45.678;
        float duration2 = 0.1234567;
        snprintf(buf, 50, "[%010.8f] [%010.8f]\n", duration1, duration2);
        cout << "Output 1': " << buf << endl;

    }
    { // vsnprintf test

        char buf[50], buf2[50];
        
        int cnt1 = test::mpsnprintf(buf, sizeof(buf), "%03d", 12);
        int cnt2 = snprintf(buf2, sizeof(buf2), "%03d", 12);
        cout << "Output 2 : " << buf << endl;
        cout << "Output 2 : " << buf2 << endl;
    }
    { // snprintf test
        char fmt1[] = {"Print %d %s.\n"};
        char fmt2[] = {"Print %d.\n"};
        char output[256];
        snprintf(output, 255, fmt1, 7787, "fmt1"); cout << output << endl;
        snprintf(output, 255, fmt2, 7787, "fmt1"); cout << output << endl;
        snprintf(output, 255, fmt1, 7787); cout << output << endl;
        snprintf(output, 255, fmt2, 7787); cout << output << endl;
        snprintf(output, 255, fmt1); cout << output << endl;
        snprintf(output, 255, fmt2); cout << output << endl;
    }
}
