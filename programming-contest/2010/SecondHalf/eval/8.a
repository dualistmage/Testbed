[2] Prior research has looked at how to improve ad-hoc retrieval performance for existing queries while tuning the ranking function, or modify and expand user queries using a fixed ranking scheme using blind feedback.
[199] Overall, when combining the two stages of ranking function tuning and blind feedback, we see that we get more than 28% improvement over the Okapi baseline system with no feedback for description queries.
[227] Our results on the 150 old queries in Table 4 show that combining ranking function tuning and blind feedback can improve the search performance by almost 30% over the baseline Okapi system.
[243] The higher performance gain of blind feedback in RF1 over Okapi is in consistent with the results in Experiment 1 and also proves our initial hypothesis that ranking function tuning helps blind feedback.
[7] We verify this integrated model in a large scale heterogeneous collection and the experimental results show that combining ranking function tuning and blind feedback can improve search performance by almost 30% over the baseline Okapi system.
[139] When combined with the blind feedback, the overall performance gains by the new ranking function should be higher than the low-performing ranking function.
[222] In this paper, we look at the performance improvement for ad-hoc retrieval from a more integrated point of view by combining the merits of ranking function tuning and blind feedback.
[223] In particular, we argue that a ranking function should be tuned first using user provided queries before applying the blind feedback technique.
[5] In particular, we argue that the ranking function should be tuned first, using user-provided queries, before applying the blind feedback technique.
[194] Compared with the Okapi baseline without blind feedback, blind feedback on Okapi ranking improves by 10.43% for description queries, and 8.71% for short queries.
