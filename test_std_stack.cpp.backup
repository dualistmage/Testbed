///
/// @file test_std_stack.cpp
/// @brief Test code of std::stack
/// @details
/// - Test 1 : Generate local stack by inheriting std::stack.
/// @author Dohyun Yun ( dualistmage@nate.com )
/// 
#include <iostream>
#include <stack>

using namespace std;
template <typename TYPE>
class MyStack : public std::stack<TYPE>
{
    using std::stack<TYPE>::c;

    public:
    TYPE topUnder() 
    {
        if ( c.size() < 2 )
            return c.back();
        else
            return (c.back() - 1 );
    } // end -topUnder()
};

int main(int argc, char* argv[])
{
    { // TEST 1 : inherit std::stack
        MyStack<int> test;
        test.push(1);

        cout << "Back : " << test.top() << endl;
        cout << "Back-1 : " << test.topUnder() << endl;

        test.push(2);
        test.push(3);

        cout << "Back : " << test.top() << endl;
        cout << "Back-1 : " << test.topUnder() << endl;
    } // end - TEST 1

    return 0;
}
