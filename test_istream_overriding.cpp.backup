#include<iostream>
#include <vector>


template<typename STRING>
class StreamTest 
{
    private:
        STRING name_;
        STRING title_;

        friend std::istream& operator>>( std::istream&, StreamTest<std::string>&);

    public:

        void print()
        {
            std::cout << "Name  : " << name_ << std::endl;
            std::cout << "Title : " << title_<< std::endl;
        } // end - void print()
};

std::istream& operator>> (std::istream& in, StreamTest<std::string>& test)
{
    std::string inputString;
    in >> inputString;
    size_t p = inputString.find(',');
    test.name_  = inputString.substr(0,p);
    test.title_ = inputString.substr(p+1,inputString.length());
    return in;
} // end - friend istream& operator >> ( istream&, const StreamTest)

int main()
{
    StreamTest<std::string> test;
    std::cin >> test;
    test.print();

    return 0;
}

