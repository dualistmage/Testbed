///
/// @file test_std_string.cpp
/// @brief Test code of std::string
/// @author Dohyun Yun ( dualistmage@nate.com )
/// 
#include <iostream>

using namespace std;

int main()
{
    { // operator[] and at() boundary test 
        string a("abc");
        printf("%d\n", a[10] );
        cout << "Length   : " << a.length() << endl;
        cout << "a[10]    : (" << a[10] << ")" << endl;
        cout << "Length   : " << a.length() << endl;
        // cout << "a.at(15) : (" << a.at(15) << ")" << endl; // Exception occurs.
        cout << "Length   : " << a.length() << endl;
    }

    { // operator + test
        std::string collectionName("KorNews");
        std::string test1("/home/wisenut/dualistmage/");
        std::string test2( test1 + "querylog_" + collectionName + ".dat" );
        cout << "operator + : " << test2 << endl;
    }

    { // operator < test
        std::string test1, test2;
        test1 = "abc"; test2 = "abcd"; 
        cout << "Term (" << test1 << "," << test2 << ") : " << (test1 < test2) << " " << (test1.compare(test2)) << endl;
        test1 = "abb"; test2 = "abcd"; 
        cout << "Term (" << test1 << "," << test2 << ") : " << (test1 < test2) << " " << (test1.compare(test2)) << endl;
        test1 = "abd"; test2 = "abcd"; 
        cout << "Term (" << test1 << "," << test2 << ") : " << (test1 < test2) << " " << (test1.compare(test2)) << endl;

        test1 = "abcd"; test2 = "abc"; 
        cout << "Term (" << test1 << "," << test2 << ") : " << (test1 < test2) << " " << (test1.compare(test2)) << endl;
        test1 = "abbd"; test2 = "abc"; 
        cout << "Term (" << test1 << "," << test2 << ") : " << (test1 < test2) << " " << (test1.compare(test2)) << endl;
        test1 = "abdd"; test2 = "abc"; 
        cout << "Term (" << test1 << "," << test2 << ") : " << (test1 < test2) << " " << (test1.compare(test2)) << endl;

        test1 = "abc"; test2 = "abc"; 
        cout << "Term (" << test1 << "," << test2 << ") : " << (test1 < test2) << " " << (test1.compare(test2)) << endl;
        test1 = "abc"; test2 = "abd"; 
        cout << "Term (" << test1 << "," << test2 << ") : " << (test1 < test2) << " " << (test1.compare(test2)) << endl;
        test1 = "abd"; test2 = "abc"; 
        cout << "Term (" << test1 << "," << test2 << ") : " << (test1 < test2) << " " << (test1.compare(test2)) << endl;
    }

    { // substr()
        std::string input("abcdefg"), prefix, suffix;
        prefix = input.substr(0, 4); // "abcd"
        suffix = input.substr(4); // 4 to end "efg"
        cout << "Prefix : " << prefix << endl;
        cout << "Suffix : " << suffix << endl;
    }
}
